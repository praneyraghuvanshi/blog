{"remainingRequest":"/home/fourtek/Projects/vuepress-setup/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/fourtek/Projects/vuepress-setup/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/fourtek/Projects/vuepress-setup/node_modules/vue-loader/lib/index.js??ref--1-1!/home/fourtek/Projects/vuepress-setup/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/fourtek/Projects/vuepress-setup/docs/IntelliJPlugin.md?vue&type=template&id=7f20529d&","dependencies":[{"path":"/home/fourtek/Projects/vuepress-setup/docs/IntelliJPlugin.md","mtime":1551172418380},{"path":"/home/fourtek/Projects/vuepress-setup/node_modules/cache-loader/dist/cjs.js","mtime":1550653864033},{"path":"/home/fourtek/Projects/vuepress-setup/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1550653865755},{"path":"/home/fourtek/Projects/vuepress-setup/node_modules/cache-loader/dist/cjs.js","mtime":1550653864033},{"path":"/home/fourtek/Projects/vuepress-setup/node_modules/vue-loader/lib/index.js","mtime":1550653865755},{"path":"/home/fourtek/Projects/vuepress-setup/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1550653889354}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"To use Devnagri plugin user must have created a project on the website (\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://docs.devnagri.com/guide/Client-Guide.html#adding-new-project\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Follow the steps to add a project\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \"). User will only create the project with the instructions and move to project dashboard (\"\n      ),\n      _c(\"strong\", [_vm._v(\"Note\")]),\n      _vm._v(\n        \": User need not to upload the file). Choose the project to get the project key.\\nOnce on project summary page, user will be able to choose “CLI” option available on the last tab.\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Copy and store them separately for further use.\")]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"After creating the tokens user need to go to “Android Studio” and follow the steps given below:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Once the plugin is installed, click on the plugin and follow the steps:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Once the token keys are added and accepted, use the step given below to push and upload the file:\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"android-studio\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#android-studio\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Android Studio\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"generating-project-key\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#generating-project-key\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Generating Project Key\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Initially there will a blank box, user is required to click “\"),\n      _c(\"strong\", [_vm._v(\"Generate Key\")]),\n      _vm._v(\"” option to produce a Project key.\\n\"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/ProjectKey.png\"), alt: \"Project Key\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"On generating the key user is required to copy and store it separately for further usage.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/Projectkey1.png\"),\n          alt: \"Project Key Generated\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"creating-oauth-client\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#creating-oauth-client\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Creating OAuth Client\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Go to, Account Settings>> OAuth Clients, “\"),\n      _c(\"strong\", [_vm._v(\"Create New Client\")]),\n      _vm._v(\"”.\\n\"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/AccountSettings.png\"),\n          alt: \"Account Setting\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/oauthclient.png\"), alt: \"OAuth Client\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"As soon as “Create New Client” option is clicked “\"),\n      _c(\"strong\", [_vm._v(\"Client ID\")]),\n      _vm._v(\"” and “\"),\n      _c(\"strong\", [_vm._v(\"Secret\")]),\n      _vm._v(\"” will be created.\\n\"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/oauthclient2.png\"),\n          alt: \"OAuth Client 2\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"creating-personal-access-token\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#creating-personal-access-token\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Creating Personal Access Token\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Go to, Account Settings>> Personal Access Token option.\\nNext, click “\"\n      ),\n      _c(\"strong\", [_vm._v(\"Create New Token\")]),\n      _vm._v(\"” and add the details Eg; name of the project and developer.\\n\"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/accesstoken.png\"), alt: \"Access Token\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"A token will be generated after clicking “\"),\n      _c(\"strong\", [_vm._v(\"OK\")]),\n      _vm._v(\n        \"” button. Copy and store externally on a file to use it further.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/accesstoken1.png\"),\n          alt: \"Access Token Generated\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"installing-plugin\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#installing-plugin\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Installing Plugin\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Go to File>>Settings>>Plugin\\n\"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/plugin.png\"), alt: \"Plugin\" }\n      }),\n      _vm._v(\"\\nSearch for the plugin with “\"),\n      _c(\"strong\", [_vm._v(\"Devnagri\")]),\n      _vm._v(\n        \"”, if unable to get in search result than click “Search In Repository”\\n\"\n      ),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/pluginsearch.png\"),\n          alt: \"Plugin Search\"\n        }\n      }),\n      _vm._v(\"\\nClick “\"),\n      _c(\"strong\", [_vm._v(\"Install\")]),\n      _vm._v(\"” option, once done the application will restart.\\n\"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/devnagri.png\"),\n          alt: \"Install Devnagri Plugin\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/instalingplugin.png\"),\n          alt: \"Install Plugin\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/pluginsearch2.png\"),\n          alt: \"Plugin Installed\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"After the restart, the plugin with name “Devnagri” will be available in right hand panel along with icon.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/restartstudio.png\"),\n          alt: \"Restart Plugin\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/plugininstall.png\"),\n          alt: \"Plugin Installed and Activated\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h2\",\n      { attrs: { id: \"adding-access-tokens-in-android-studio\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#adding-access-tokens-in-android-studio\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Adding Access Tokens In Android Studio\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Go to \"),\n      _c(\"strong\", [_vm._v(\"Settings\")]),\n      _vm._v(\n        \", fill all field like Access token, Client id, Project Key, Client _Secret.You will get all value from creating project on Devnagri.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/settings0.png\"), alt: \"Setting\" }\n      }),\n      _vm._v(\"\\nInsert keys according to required fields carefully.\\n\"),\n      _c(\"img\", {\n        attrs: {\n          src: require(\"./images/settingscreen.png\"),\n          alt: \"Setting Keys\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/setting1.png\"), alt: \"Setting Keys1\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Click “\"),\n      _c(\"strong\", [_vm._v(\"ok\")]),\n      _vm._v(\n        \"” to add the keys. “.devnagri.yml” file will be created in your app.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/yml.png\"), alt: \"Setting Keys1\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"pushing-files-from-android-studio\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#pushing-files-from-android-studio\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Pushing files From Android Studio\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Go to “\"),\n      _c(\"strong\", [_vm._v(\"Push\")]),\n      _vm._v(\n        \"” icon and as soon as file is uploaded, user will get a success notification\\n\"\n      ),\n      _c(\"img\", { attrs: { src: require(\"./images/push.png\"), alt: \"Push\" } }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/push1.png\"), alt: \"Push 1\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h2\",\n      { attrs: { id: \"pulling-the-translated-file-in-android-studio\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#pulling-the-translated-file-in-android-studio\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Pulling the Translated File in Android Studio\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Once the files are translated user can pull the files by following the steps given below:\\n\"\n      ),\n      _c(\"strong\", [_vm._v(\"Note\")]),\n      _vm._v(\n        \": User can only the file once it is completely translated.\\nGo to “\"\n      ),\n      _c(\"strong\", [_vm._v(\"Pull\")]),\n      _vm._v(\n        \"” icon given on Devnagri plugin tab. Once the file is pulled it will store in resource “\"\n      ),\n      _c(\"strong\", [_vm._v(\"res\")]),\n      _vm._v(\"” folder with “folder name and such as “\"),\n      _c(\"strong\", [_vm._v(\"Value-hi\")]),\n      _vm._v(\"” along with \"),\n      _c(\"strong\", [_vm._v(\"string.xml\")]),\n      _vm._v(\" file.\\n\"),\n      _c(\"img\", { attrs: { src: require(\"./images/pull.png\"), alt: \"Pull\" } }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/pull1.png\"), alt: \"Push 1\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"Note\")]),\n      _vm._v(\n        \": The folder name will change according to the Target languages chosen.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/pull3.png\"), alt: \"Push 2\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"check-status\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#check-status\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Check Status\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Status icon available in Devnagri plugin will give the current status of the translated project. Ex; percentage of translated project with respect to language or review status of the project.\\n\"\n      ),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/status.png\"), alt: \"Status\" }\n      }),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: { src: require(\"./images/status1.png\"), alt: \"Status 1\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"sync\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#sync\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Sync\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"Using this option in Devngari plugin will help to sync the “local file folder” and the “Devnagri project server file folder”. Use this option when adding new words in the android application file.\\n\"\n      ),\n      _c(\"img\", { attrs: { src: require(\"./images/sync.png\"), alt: \"Sync\" } }),\n      _vm._v(\" \"),\n      _c(\"img\", { attrs: { src: require(\"./images/sync1.png\"), alt: \"Sync1\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"help\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#help\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Help\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"To contact for any plugin or translation related issue, user can click the “Help” icon.\\n\"\n      ),\n      _c(\"img\", { attrs: { src: require(\"./images/help.png\"), alt: \"Help\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"developers\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#developers\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Developers\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"Gaurav Tyagi\")]),\n      _vm._v(\" (tyagigaurav@fourtek.com),\\n\"),\n      _c(\"strong\", [_vm._v(\"Gaurav Sengar\")]),\n      _vm._v(\" (gauravsengar@fourtek.com)\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}